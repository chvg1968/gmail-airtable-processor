/**
 * INSTRUCCIONES PARA PROBAR EmailProcessor SIN RECURSI√ìN
 * =====================================================
 * 
 * Para probar el nuevo EmailProcessor.js en Google Apps Script:
 * 
 * 1. Abrir Google Apps Script
 * 2. Copiar y pegar el contenido del archivo EmailProcessor.js
 * 3. Asegurarse de que todos los otros archivos est√©n cargados:
 *    - Config.js
 *    - SimpleLogger.js  
 *    - EmailService.js
 *    - EmailFilters.js
 *    - SharedUtils.js
 *    - SimpleEmailProcessor.js
 *    - AirtableService.js
 * 
 * 4. Ejecutar la siguiente funci√≥n de prueba:
 */

function testProcessEmails() {
  try {
    console.log('=== TESTING EmailProcessor SIN RECURSI√ìN ===');
    
    // Verificar que EmailProcessor existe
    if (typeof EmailProcessor === 'undefined') {
      throw new Error('EmailProcessor no est√° disponible');
    }
    
    console.log('‚úÖ EmailProcessor disponible');
    
    // Crear instancia
    const processor = new EmailProcessor();
    console.log('‚úÖ Instancia creada');
    
    // Ejecutar processEmails()
    console.log('üöÄ Ejecutando processEmails()...');
    const result = processor.processEmails();
    
    console.log('üéâ ¬°SUCCESS! processEmails() ejecutado sin errores de recursi√≥n');
    console.log('üìä Resultado:', JSON.stringify(result, null, 2));
    
    return result;
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.error('üìç Stack:', error.stack);
    
    // Verificar si es error de recursi√≥n
    if (error.message.includes('Maximum call stack size exceeded')) {
      console.error('‚ö†Ô∏è  RECURSI√ìN DETECTADA: Revisar llamadas a ensureDependencies()');
    }
    
    throw error;
  }
}

/**
 * RESUMEN DE CAMBIOS REALIZADOS:
 * ===============================
 * 
 * ‚úÖ ELIMINADO: Todas las llamadas a ensureDependencies()
 * ‚úÖ AGREGADO: Funciones auxiliares seguras (getSimpleLogger, getEmailFilters, etc.)
 * ‚úÖ CAMBIADO: Acceso directo a globalThis para dependencias
 * ‚úÖ SIMPLIFICADO: Lazy loading reemplazado por verificaciones directas
 * ‚úÖ MEJORADO: Manejo de errores sin recursi√≥n
 * 
 * PUNTOS CLAVE:
 * - EmailProcessor ya no llama ensureDependencies() en el constructor
 * - Cada m√©todo usa funciones auxiliares que NO causan recursi√≥n
 * - Acceso directo a globalThis.EmailService, globalThis.CONFIG, etc.
 * - Manejo seguro de dependencias faltantes
 */
